openapi: 3.0.3
info:
    title: Gravitee.io APIM - Management API - UI
    description: |-
        This is the OpenAPI specification for our new version of APIM Management API.
    contact:
        email: team-apim@graviteesource.com
    license:
        name: Apache 2.0
        url: http://www.apache.org/licenses/LICENSE-2.0.html
    version: 2.0.0

servers:
    - url: "{protocol}://{managementAPIHost}/management/v2/organizations/{orgId}/environments/{envId}"
      description: APIM Management API v2 - Base URL to target specific organizations
      variables:
        protocol:
          description: The protocol you want to use to communicate with the mAPI
          default: https
          enum:
            - https
            - http
        managementAPIHost:
          description: The domain of the server hosting your Management API
          default: localhost:8083
        orgId:
          description: The unique ID of your organization
          default: DEFAULT
        envId:
          description: The unique ID of the targeted environment
          default: DEFAULT
    - url: "{protocol}://{managementAPIHost}/management/v2/environments/{envId}"
      description: APIM Management API v2 - Base URL to target specific organizations
      variables:
        protocol:
          description: The protocol you want to use to communicate with the mAPI
          default: https
          enum:
            - https
            - http
        managementAPIHost:
          description: The domain of the server hosting your Management API
          default: localhost:8083
        envId:
          description: The unique ID of the targeted environment
          default: DEFAULT

tags:
    - name: Portal UI
      description: Everything about Portal UI

paths:
    /themes:
      parameters:
        - $ref: "#/components/parameters/envIdParam"
      get:
        parameters:
          - $ref: "#/components/parameters/pageParam"
          - $ref: "#/components/parameters/perPageParam"
          - $ref: "#/components/parameters/themeTypeParam"
          - $ref: "#/components/parameters/enabledThemeParam"
        tags:
          - Management UI
        summary: Get page of portal themes
        description: |
          Get a page of the portal themes used in the given environment.
          
          These themes can be used with either Portal or Portal-Next.
          User must have the ENVIRONMENT_THEME[READ] permission.
        operationId: getPortalThemes
        responses:
          "200":
            $ref: "#/components/responses/ThemesResponse"
          default:
            $ref: "#/components/responses/Error"
components:
    schemas:
        Error:
            type: object
            properties:
                httpStatus:
                    type: integer
                    format: int32
                    description: The error code
                    example: 400
                message:
                    type: string
                    description: The error message
                    example: Bad request
                technicalCode:
                    type: string
                    description: A technical code to identify the error
                    example: invalid.import.definition
                parameters:
                    type: object
                    description: A map of parameters to be used in the error message
                    additionalProperties:
                        type: string
                details:
                    type: array
                    description: A list of details about the error
                    items:
                        type: object
                        properties:
                            message:
                                type: string
                                description: The error message
                                example: Bad request
                            location:
                                type: string
                                description: The json path of the field in error.
                                example: updateApi.properties[0].key
                            invalidValue:
                                description: The invalid value.
        GenericTheme:
          type: object
          title: "GenericTheme"
          properties:
            id:
              type: string
              description: Theme ID
              example: 00f8c9e7-78fc-4907-b8c9-e778fc790750
            name:
              type: string
              description: Theme ID
              example: 00f8c9e7-78fc-4907-b8c9-e778fc790750
            type:
              $ref: "#/components/schemas/ThemeType"
            createdAt:
              type: string
              format: date-time
              description: The date (as timestamp) when the Theme was created.
              example: 1581256457163
            updatedAt:
              type: string
              format: date-time
              description: The last date (as timestamp) when the Theme was updated.
              example: 1581256457163
            enabled:
              type: boolean
              description: If the theme is active
              example: true
            logo:
              type: string
              description: Theme logo
            optionalLogo:
              type: string
              description: Optional Theme logo
            favicon:
              type: string
              description: Theme favicon
          discriminator:
            propertyName: type
            mapping:
              PORTAL: ThemePortal
              PORTAL_NEXT: ThemePortalNext

        Links:
          description: List of links for pagination
          properties:
            self:
              type: string
              description: Link to current resource
            first:
              type: string
              description: In a paginated response, link to the first page
            last:
              type: string
              description: In a paginated response, link to the last page
            previous:
              type: string
              description: In a paginated response, link to the previous page. Maybe null if current is the first page
            next:
              type: string
              description: In a paginated response, link to the next page. Maybe null if current is the last page

        Pagination:
          description: Generic object to handle pagination data.
          type: object
          properties:
            page:
              type: integer
              description: The current page.
            perPage:
              type: integer
              description: The number of items requested per page.
            pageCount:
              type: integer
              description: The total number of pages.
            pageItemsCount:
              type: integer
              description: The number of items for the current page.
            totalCount:
              type: integer
              format: int64
              description: The total number of items.

        PortalComponentDefinition:
          type: object
          properties:
            name:
              type: string
              description: Name of the component
              example: gv-tree
            css:
              type: array
              description: List of CSS variables
              items:
                $ref: "#/components/schemas/PortalCssDefinition"

        PortalCssDefinition:
          type: object
          description: CSS variable values
          properties:
            name:
              type: string
              description: Name of the CSS variable
              example: --gv-tree-color
            description:
              type: string
              description: Description of CSS variable
              example: Color of gv-tree
            value:
              type: string
              description: Value for CSS variable
              example: #000
            defaultValue:
              type: string
              description: Default value for CSS variable
              example: #FFF
            type:
              type: string
              enum:
                - color
                - length
                - string
                - image

        PortalDefinition:
          type: object
          properties:
            data:
              type: array
              description: List of component definitions
              items:
                $ref: "#/components/schemas/PortalComponentDefinition"

        PortalNextDefinition:
          type: object
          description: Theme definition used for Portal-Next
          properties:
            primary:
              type: string
              description: Primary hex code color seed for Theme palette
              example: #e1f200
            secondary:
              type: string
              description: Secondary hex code color seed for Theme palette
              example: #e1f200
            tertiary:
              type: string
              description: Tertiary hex code color seed for Theme palette
              example: #e1f200
            error:
              type: string
              description: Error hex code color seed for Theme palette
              example: #e1f200
            background:
              type: string
              description: Background hex code color
              example: #e1f200
            banner:
              type: object
              description: Banner customization
              properties:
                text:
                  type: string
                  description: Banner text hex code color
                  example: #e1f200
                background:
                  type: string
                  description: Banner background hex code color
                  example: #e1f200
        Theme:
          oneOf:
            - $ref: "#/components/schemas/ThemePortal"
            - $ref: "#/components/schemas/ThemePortalNext"
          discriminator:
            propertyName: type
            mapping:
              PORTAL: ThemePortal
              PORTAL_NEXT: ThemePortalNext

        ThemePortal:
          title: "ThemePortal"
          description: Theme used on the Portal
          allOf:
            - $ref: "#/components/schemas/GenericTheme"
            - properties:
                definition:
                  $ref: "#/components/schemas/PortalDefinition"
                backgroundImage:
                  type: string
                  description: Background image used in header

        ThemePortalNext:
          title: "ThemePortalNext"
          description: Theme used in Portal-Next
          allOf:
            - $ref: "#/components/schemas/GenericTheme"
            - properties:
                definition:
                  $ref: "#/components/schemas/PortalNextDefinition"


        ThemeType:
          type: string
          description: Available theme types
          default: PORTAL
          enum:
            - PORTAL
            - PORTAL_NEXT

    parameters:
        enabledThemeParam:
          name: enabled
          in: query
          required: false
          description: Filter for enabled themes.
          schema:
            type: boolean
        envIdParam:
          name: envId
          in: path
          required: true
          description: Id or Hrid (Human readable Id) of an environment.
          schema:
            type: string
            default: DEFAULT
        pageParam:
          name: page
          in: query
          required: false
          description: The page number for pagination.
          schema:
            type: integer
            default: 1
        perPageParam:
          name: perPage
          in: query
          required: false
          description: |
            The number of items per page for pagination.
          schema:
            type: integer
            default: 10
        themeTypeParam:
          name: type
          in: query
          required: false
          description: Filter by theme type
          schema:
            $ref: "#/components/schemas/ThemeType"
    responses:
        Error:
            description: Generic error response
            content:
                application/json:
                    schema:
                        $ref: "#/components/schemas/Error"
        ThemesResponse:
          description: Page of themes
          content:
            application/json:
              schema:
                title: "ThemesResponse"
                properties:
                  data:
                    description: List of themes.
                    type: array
                    items:
                      $ref: "#/components/schemas/Theme"
                  pagination:
                    $ref: "#/components/schemas/Pagination"
                  links:
                    $ref: "#/components/schemas/Links"